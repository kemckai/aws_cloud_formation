AWSTemplateFormatVersion: '2023-09-09'
Description: Serverless application architecture using Lambda, DynamoDB, and S3.

Resources:
  MyDynamoDB:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: MyTable
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  MyS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: my-serverless-bucket

  MyLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: MyResponseFunction
      Handler: index.handler
      Runtime: nodejs14.x
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          const AWS = require('aws-sdk');
          exports.handler = async (event) => {
              // Your logic here
              return { statusCode: 200, body: 'Hello from Lambda!' };
          };

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: DynamoDBInvokePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                Resource: !GetAtt MyDynamoDB.Arn

  MyApi:
   
